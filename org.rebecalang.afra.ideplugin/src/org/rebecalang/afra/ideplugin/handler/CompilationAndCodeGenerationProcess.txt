COMPILATIONANDCODEGENERATIONPROCESS.JAVA DOCUMENTATION
======================================================

PURPOSE:
Core compilation engine that handles the complete Rebeca compilation workflow: parsing, code generation, C++ compilation, and error handling.

ECLIPSE VS AFRA:
- Uses Eclipse IFile, IMarker, IResource APIs
- Afra-specific implementation using Spring DI and Rebeca compiler libraries

KEY METHODS:
- compileAndGenerateCodes(Shell, boolean): Main compilation method, orchestrates entire process
- generateModelCheckingFiles(File): Uses Rebeca compiler to generate C++ files
- generateCompilationCommands(File): Creates g++ compilation commands for generated C++ files
- generateLinkerCommands(File): Creates g++ linker commands to build executable
- associateMarkersWithFile(): Creates Eclipse error markers from compilation exceptions
- filesAreUpdated(): Checks if recompilation is needed based on file timestamps

IMPORTANT NOTES:
- This is the CORE COMPILATION ENGINE - handles all compiler integration
- Creates Eclipse error markers for compilation errors (answers question #4)
- Uses Spring dependency injection for compiler components
- Generates C++ code from Rebeca models then compiles with g++
- Handles both .rebeca and .property files
- Creates executable files in project's "out" directory
- Essential for the entire compilation workflow
